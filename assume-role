#!/usr/bin/env bash
######################################################################
##
## description:
##   creates subshell with role credentials
##
## usage:
##   $0 destination-accta destination-role
##
## example:
##   assume-role blackbaud-prototype DevOps
##
## note:
##
##
######################################################################
set -eu
set -o pipefail

## determine top dir
top_dir=$(cd $(dirname $0)/..; echo $PWD)

## check arguments
if [ "$#" -lt 2 ]; then
    echo >&2 "usage: $0 destination-acct destination-role"
    exit 0
fi

## read arguments
acct_id=$1; shift
role=$1; shift

role_arn="arn:aws:iam::$acct_id:role/$role"
role_session_name=${GIT_COMMITTER_EMAIL:-unknown}
output=$(aws sts assume-role --role-arn "$role_arn" --role-session-name "$role_session_name" --query 'Credentials' --output json)
unset role_arn role_session_name
export AWS_ACCESS_KEY_ID=$(jq -r .AccessKeyId <<<"$output")
export AWS_SECRET_ACCESS_KEY=$(jq -r .SecretAccessKey <<<"$output")
export AWS_SECURITY_TOKEN=$(jq -r .SessionToken <<<"$output")
unset output
echo >&2 "starting subshell w/ credentials for role [$role]..."
exec bash
